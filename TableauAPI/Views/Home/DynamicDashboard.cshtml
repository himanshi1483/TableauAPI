
@{
    ViewBag.Title = "Dynamic Dashboard";
}

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"
      crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"
            crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"
            crossorigin="anonymous"></script>
<link rel="stylesheet" type="text/css" href="~/SpeechToText/dynamic-index.css">


<script>
    // For demo purposes only, show screenshots of different sites in the background
    (function () {
        var getRandomIntInclusive = function (min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
    })();
</script>

<div class="row" style="padding-top:5px;margin-left:15px;">
    <div class="col-4" style="background-color:#EAEAEA;border: white solid 2px;">
        <div class="input-group mb-3" style=" padding-top: 15px;">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1">Tableau URL</span>
            </div>
            <input id="tableauURL" type="text" class="form-control" placeholder="Enter the url for your dashboard"
                   aria-label="Username" aria-describedby="basic-addon1">
        </div>
        <!-- <h4 class="" id="dashboardTitle"></h4> -->
        <div class="btn btn-default btn-block" style="cursor:none;display:none" id="dashboardTitle"></div>
        <p><i>Say "Filter By" any of the below column name</i></p>
        <p><i>Choose value by saying "Value" and any of the value of the filter from the dashboard.</i></p>
        <div class="container mt-3">
            <ul class="list-inline" id="dashboardCols"></ul>
        </div>
        <br>
        <br>
        <!-- <input type="text" class="speech-input form-control" placeholder="What's Up?" name="eng-input" style="height: 35px !important; font-size: 14px;"> -->

    </div>

    <div class="col-8" style="text-align: center;background-color:#EAEAEA; padding-top: 10px;">
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Visualization</a></li>
                <li style="display:none"><a href="#tabs-2">Data</a></li>
            </ul>
            <div id="tabs-1">
                <div id="vizContainer"></div>
            </div>
            <div id="tabs-2"  style="display:none">
                Worksheet Name :
                <select id="menu"></select>
                <div id="dataContainer">
                </div>
            </div>
        </div>
        <div id="textarea"></div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js"></script>
<script src="https://public.tableau.com/javascripts/api/tableau-2.js"></script>
<script type="text/javascript" src="~/SpeechToText/speech-input.js"></script>
@*<script type="text/javascript" src="~/SpeechToText/dynamic-index.js"></script>*@

<script src='https://code.responsivevoice.org/responsivevoice.js'></script>
<script src="~/SpeechToText/annyang.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/SpeechKITT/0.3.0/speechkitt.min.js"></script>
<!-- Voice Recognition -->
<script>
    $(document).ready(function () {

    window.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;
    if ('SpeechRecognition' in window) {
        // speech recognition API supported
        console.log("Supported");

    } else {
        // speech recognition API not supported
        console.log("Not Supported");
    }
   // $("#tabs").show();
   // $("#tabs").tabs();
    $("#vizContainer").height(window.innerHeight - 200);
    $("#dataContainer").height(window.innerHeight - 250);
    $("#tableauURL").change(function () {
        initViz();
    });
    $("#menu").change(function () {
        //console.log(data[0]);

        fetchSheetData();
    });

});

function initViz() {
    $("#vizContainer").empty();
    $("#dataContainer").empty();
    $("#menu").empty();
    $("#vizContainer").append("<div id='tableau_visualization'></div>");
    var containerDiv = document.getElementById("tableau_visualization"),
        url = $("#tableauURL").val(),
        options = {
            hideTabs: true,
            hideToolbar: true,
            onFirstInteractive: function () {
                workbook = viz.getWorkbook();
                $("#dashboardTitle").text(workbook.getName());
                $("#dashboardTitle").css('display', 'block');
                $("#dashboardTitle").css('font-weight', 'bold');
                getVizData();
                //console.log(workbook.getColumns());

            }
        };
    viz = new tableau.Viz(containerDiv, url, options);
}


//when viz is loaded (onFirstInteractive), request data
function getVizData() {
    options = {
        maxRows: 0, // Max rows to return. Use 0 to return all rows
        ignoreAliases: false,
        ignoreSelection: true,
        includeAllColumns: false
    };

    sheet = viz.getWorkbook().getActiveSheet();

    //if active tab is a worksheet, get data from that sheet
    if (sheet.getSheetType() === 'worksheet') {
        $('#menu').append('<option>' + sheet.getName() + '</option>');
        if ($('#menu option').length === 1) {
            sheet.getUnderlyingDataAsync(options).then(function (t) {
                prepareTable(sheet.getName(), t);
                // buildMenu(t);
            });
        }
        //if active sheet is a dashboard get data from a specified sheet
    } else {
        // alert("SheetType = " + sheet.getSheetType());
        // debugger;
        worksheetArray = viz.getWorkbook().getActiveSheet().getWorksheets();
        for (var i = 0; i < worksheetArray.length; i++) {
            sheet = worksheetArray[i];
            if (sheet.getSheetType() === 'worksheet') {
                $('#menu').append('<option>' + sheet.getName() + '</option>');
            }
        }
        fetchSheetData();
    }
}

function fetchSheetData() {
    $('#dataContainer').empty();

    worksheetArray = viz.getWorkbook().getActiveSheet().getWorksheets();

    for (var i = 0; i < worksheetArray.length; i++) {
        sheet = worksheetArray[i];
        if (sheet.getSheetType() === 'worksheet' && sheet.getName() === $("#menu").val()) {
            var sheetName = sheet.getName();
            // console.log(sheetName);
            sheet.getUnderlyingDataAsync(options).then(function (t) {
                var ul = document.getElementById("dashboardCols");
                var lis = ul.children;

                const li_count =lis.length;
                if (li_count > 0) {
                    for (let index = 0; index < li_count; index++) {
                        ul.removeChild(lis[0]);
                    }
                }
                prepareTable(sheetName, t);
            });
        }

    }
}

//restructure the data and build something with it
function prepareTable(name, table) {

    var rowNum = 50;
    //the data returned from the tableau API
    var columns = table.getColumns();
    var data = table.getData();
    // console.log(columns[0]);
    var arr = [];
    var dataArr = [];
    $('<legend style="font-size:14px;" class="btn btn-default">Dimensions and Metrics</legend>').appendTo('#dashboardCols');
    // //convert to field:values convention
    function reduceToObjects(cols, data) {
        var fieldNameMap = $.map(cols, function (col) {

            var colsdata = col.getFieldName();
            arr.push(colsdata);

            var li = $('<li class="list-inline-item btn btn-info" style="margin-bottom:10px">' + colsdata + '</li>').appendTo('#dashboardCols');
            return col.getFieldName();
        });
        localStorage.setItem("Fields", arr);
        var dataToReturn = $.map(data, function (d) {
            return d.reduce(function (memo, value, idx) {
                memo[fieldNameMap[idx]] = value.value;
                dataArr.push(memo[fieldNameMap[idx]]);

                return memo;
            }, {});

        });
        localStorage.setItem("FieldData", dataArr);
        return dataToReturn;
    }


    var niceData = reduceToObjects(columns, data);
        console.log(JSON.stringify(niceData));
      var d = JSON.stringify(niceData.slice(0,500));
        if (niceData != null)
        {
                    $.ajax({
            type: "POST",
            url: "@Url.Action("DynamicDashboard")",
            content: "application/json; charset=utf-8",
            dataType: "json",
            data: { "data": d },
            success: function (d) {
                if (d.success == true)
                    window.location.reload();
                else { }
            },
            error: function (xhr, textStatus, errorThrown) {
                // TODO: Show error
            }
        });
        }

    var table = $("<table>");
    var tr = $("<tr>");
    columns.forEach(function (col, i) {
        var th = $("<th>");
        th.text(col.getFieldName());
        tr.append(th);
    });
    table.append(tr);

    data.every(function (row, i) {
        if (i >= rowNum) {
            return false;
        }
        tr = $("<tr>");
        row.forEach(function (col) {
            var td = $("<td>");
            td.text(col.formattedValue);
            tr.append(td);
        });
        table.append(tr);
        return true;
    });
    var tableContainer = $("<div class='tableContainer'>");
    var tableHeading = $("<p>" + (data.length > rowNum ? " (showing only " + rowNum + "/" + data.length + " rows)" : " (showing " + data.length + " rows)") + "</p>")
    tableContainer.append(tableHeading);
    tableContainer.append(table);
    $('#dataContainer').append(tableContainer);
}


</script>

<script src="~/SpeechToText/dynamic-tableau.js"></script>
